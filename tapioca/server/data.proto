syntax = "proto2";

import "tapioca/core/manifest.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

message ProjectConfig {
  optional uint32 id = 1;
  optional uint32 default_branch = 2;
  map<uint32, BranchConfig> branches = 3;
  // Required: Platform specific launch options. Map keys are Platform values.
  // These values are overriden by branch specific options if they are present.
  map<uint32, LaunchOptions> launch_options = 4;
  optional GarbageCollectionPolicy garbage_collection_policy = 5;
  // Required: the URL prefix to download objects from.
  optional string block_storage_prefix = 6;
}

// Determines the build purge policy of a project.
//
// Purged builds do not have their data deleted, but will have the refrence
// originating from the build deleted.
message GarbageCollectionPolicy {
  // Builds older than a given retention duration will be purged.
  //
  // If unset, builds are indefinitely until manually purged.
  //
  // Exception: At least one build per branch/target combination will be
  // retained of what this is set to.
  optional google.protobuf.Duration retention_duration = 1;

  // The number of builds to retain per branch/target combionation. As new
  // builds are pushed.
  //
  // If not set, the value is assumed to be 1.
  optional uint64 retained_builds = 2;
}

// Values are 16-bit integers:
//    Top byte is an identifier for a family of targets.
//    Bottom byte is a specific target type within that family.
//    Supports 256 targets within a target family.
enum Platform {
  // Windows family ID: 0x0100
  Windows_x64 = 0x0101;
  Windows_x86 = 0x0102;
  Windows_AppStore = 0x0103;
  // MacOS family ID: 0x0100
  MacOS_Universal = 0x0201;
  // Linux family ID: 0x0300
  Linux_Universal = 0x0301;
  Linux_x64 = 0x0302;
  // Apple platform family ID: 0x0400
  Apple_iOS = 0x0401;
  Apple_tvOS = 0x0402;
  // Android family ID: 0x0500
  Andooid = 0x0501;
  // WebGL family ID: 0x0600
  WebGL = 0x0601;
  // Sony Console family ID: 0x0700
  PS4 = 0x0701;
  PS_Vita = 0x0702;
  // Microsoft console family ID: 0x0800
  XboxOne = 0x0801;
  // Nintendo console family ID: 0x0900
  Nintendo_Switch = 0x0901;
  Nintendo_3DS = 0x0902;
}

message LaunchOptions {
  // The path of game executable that is to be launched, relative to the root
  // directory of the build.
  //
  // Note: path is seperated by '/' path seperator.
  optional string executable = 1;
  // The additional command line flags used when launching on a platform.
  repeated string launch_flags = 2;
}

// ID: 8 bytes:
//     {4-byte Project ID} +
//     {4-byte branch name fingerprint}
message BranchConfig {
  optional uint32 project_id = 1;
  optional uint32 id = 2;
  // Source control branch name.
  optional string name = 3;
  // Optional: Human facing display name for the branch
  optional string display_name = 4;
  // Optional: Platform specific launch options. Map keys are Platform values.
  // Overrides project wide launch options when provided.
  map<uint32, LaunchOptions> launch_options = 5;
}

message BuildProto {
  message Metadata {
    // Required: The source control commit hash.
    optional bytes source_commit = 1;

    // Reqired: The timestamp the build was created at.
    optional google.protobuf.Timestamp build_timestamp = 2;

    // Required: The target platform for the build
    optional Platform platform = 3;
  }

  // ID: 14 bytes:
  //     {8-byte Branch ID} +
  //     {4-byte truncated SHA-1 of commit}
  //     {2-byte target} +
  optional bytes id = 1;

  // The build manifest
  optional tapioca.core.ManifestProto manifest = 2;

  optional Metadata metadata = 3;

  // Information on how to launch the build.
  optional LaunchOptions launch_options = 4;
}

// ID: 34 bytes:
//     {20-byte block SHA-1} +
//     {14-byte block build hash}
message BlockInfo {}
